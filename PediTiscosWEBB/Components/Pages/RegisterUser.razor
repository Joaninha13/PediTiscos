@page "/registaruser"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using RCLAPI.DTO
@using RCLAPI.Services

@inject NavigationManager NavigationManager

<PageTitle>Criar Registo de Utilizador</PageTitle>

<!-- The Modal -->
<div id="myModal" class="modal" style="display:@estado">
    <!-- Modal content -->
    <div class="modal-content">
        <h1>Registo de Utilizador</h1>
        <span class="close" @onclick="Modal">&times;</span>

        <EditForm method="post" Model="Utilizador" OnValidSubmit="AddUser" 
            enctype="multipart/form-data" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
    
                <div class="md-2">
                <label for="nome" class="form-label">Nome:</label> 
                <InputText id="nome" @bind-Value="Utilizador.Nome" class="form-control" />
                <ValidationMessage For="() => Utilizador.Nome" class="text-danger" />
                </div>     
       
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="Utilizador.Email" class="form-control" />
                <ValidationMessage For="() => Utilizador.Email" class="text-danger" />
 
                <label for="password" class="form-label">Password:</label> 
                <InputText type="password"  id="password" @bind-Value="Utilizador.Password" class="form-control" />
                <ValidationMessage For="() => Utilizador.Password" class="text-danger" />

                 <label for="confirmepassword" class="form-label">Confirme a Password:</label> 
                <InputText type="password"  id="confirmepassword" 
                    @bind-Value="Utilizador.ConfirmPassword" class="form-control" />
                <ValidationMessage For="() => Utilizador.ConfirmPassword" class="text-danger" />
                <label for="nif" class="form-label">NIF:</label> 
                <InputNumber id="nif" @bind-Value="Utilizador.NIF" class="form-control" />
                <ValidationMessage For="() => Utilizador.NIF" class="text-danger" />
                              
            <button type="submit" class="btn btn-primary"><img title="Registar" src="/images/register.png" style="height:30px" /></button>
            <a href="/" type="button" class="btn btn-outline-secondary"><img title="Recuar" src="/images/backicon.png" style="height:30px" /></a>      
        </EditForm>
    </div>
</div>
@code {      
    [SupplyParameterFromForm]
    public Utilizador Utilizador { get; set; } = new();
    [Inject]
    public IApiServices? _apiServices { get; set; }
    private string estado = "block";

    private void Modal(){
        if (estado == "block")
            estado = "none";
        else estado = "block";

        NavigationManager.NavigateTo("/");
    }

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddUser()
    {
        try
        {
            var result = await _apiServices.RegistarUtilizador(Utilizador);
        }
        catch (DbUpdateConcurrencyException)
        {
            NavigationManager.NavigateTo("/");
        }
        NavigationManager.NavigateTo("/");
    }
}
